import time
import random

BOLD = "\033[1m"
ITALIC = "\033[3m"
RESET = "\033[0m"

class Level1:
    def __init__(self):
        self.player_inventory = []
        self.available_actions = ["–æ—Å–º–æ—Ç—Ä–µ—Ç—å", "–≤–∑—è—Ç—å", "–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å", "–∏–¥—Ç–∏", "–∏–Ω–≤–µ–Ω—Ç–∞—Ä—å"]
        self.interacted_objects = set()
        
        self.objects_description = {
            "—Ö–æ–ª–ª": "–ó–∞–±—ã—Ç—ã–π —Ö–æ–ª–ª: –ø—ã–ª—å–Ω–æ–µ –ø–æ–º–µ—â–µ–Ω–∏–µ —Å –≤—ã—Å–æ–∫–∏–º–∏ —Å–≤–æ–¥–∞–º–∏. –í –≤–æ–∑–¥—É—Ö–µ –≤–∏—Ç–∞–µ—Ç –∑–∞–ø–∞—Ö —Å—Ç–∞—Ä–æ–π –ø—ã–ª–∏ –∏ –º–µ—Ç–∞–ª–ª–∞.",
            "–¥–≤–µ—Ä—å": "–ú–∞—Å—Å–∏–≤–Ω–∞—è –¥—É–±–æ–≤–∞—è –¥–≤–µ—Ä—å —Å –∂–µ–ª–µ–∑–Ω—ã–º–∏ —Å–∫–æ–±–∞–º–∏. –ö–∞–∂–µ—Ç—Å—è, –æ–Ω–∞ –∑–∞–ø–µ—Ä—Ç–∞ –Ω–∞ –≤–µ–∫–∞.",
            "–∫–ª—é—á": "–†–∂–∞–≤—ã–π –∂–µ–ª–µ–∑–Ω—ã–π –∫–ª—é—á, –ø–æ–∫—Ä—ã—Ç—ã–π –ø–∞—É—Ç–∏–Ω–æ–π. –ù–∞ –Ω–µ–º –≤–∏–¥–Ω–µ–µ—Ç—Å—è –≥–µ—Ä–± –ò–∑—É–º—Ä—É–¥–Ω–æ–≥–æ –≥–æ—Ä–æ–¥–∞.",
            "—Å—É–º–∫–∞": "–°—Ç–∞—Ä–∞—è –∫–æ–∂–∞–Ω–∞—è —Å—É–º–∫–∞, –∑–∞–±—ã—Ç–∞—è –≤ —É–≥–ª—É —Ö–æ–ª–ª–∞.",
            "—Å—É–Ω–¥—É–∫": "–ù–µ–±–æ–ª—å—à–æ–π –¥–µ—Ä–µ–≤—è–Ω–Ω—ã–π —Å—É–Ω–¥—É–∫, —Å—Ç–æ—è—â–∏–π —É —Å—Ç–µ–Ω—ã.",
            "–∫–∞—Ä—Ç–∏–Ω–∞": "–ü–æ—Ç—É—Å–∫–Ω–µ–≤—à–∞—è –∫–∞—Ä—Ç–∏–Ω–∞, –∏–∑–æ–±—Ä–∞–∂–∞—é—â–∞—è –≤–æ–ª—à–µ–±–Ω–∏–∫–∞ –ì—É–¥–≤–∏–Ω–∞.",
            "–∫–æ–≤–µ—Ä": "–ò—Å—Ç–æ–Ω—á–µ–Ω–Ω—ã–π –∫–æ–≤–µ—Ä —Å –≤—ã—Ü–≤–µ—Ç—à–∏–º–∏ —É–∑–æ—Ä–∞–º–∏."
        }
        
        self.objects_state = {
            "–¥–≤–µ—Ä—å": "–∑–∞–ø–µ—Ä—Ç–∞",
            "—Å—É–Ω–¥—É–∫": "–∑–∞–ø–µ—Ä—Ç",
            "–∫–ª—é—á": "–Ω–µ –Ω–∞–π–¥–µ–Ω"
        }

    def show_inventory(self):
        if not self.player_inventory:
            print("\n–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å –ø—É—Å—Ç.")
        else:
            print(f"\n–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å: {', '.join(self.player_inventory)}")

    def process_command(self, command):
        command = command.lower().strip()
        
        if command == "–∏–Ω–≤–µ–Ω—Ç–∞—Ä—å":
            self.show_inventory()
            return True
        elif command == "–ø–æ–º–æ—â—å":
            self.show_help()
            return True
        elif command == "–≤—ã—Ö–æ–¥":
            return False
        
        parts = command.split()
        if len(parts) < 2:
            print("–ù–µ –ø–æ–Ω—è–ª –∫–æ–º–∞–Ω–¥—É. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: –¥–µ–π—Å—Ç–≤–∏–µ –æ–±—ä–µ–∫—Ç")
            return True
        
        action = parts[0]
        obj = "_".join(parts[1:])
        
        if action not in self.available_actions:
            print(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ. –î–æ—Å—Ç—É–ø–Ω—ã–µ: {', '.join(self.available_actions)}")
            return True
        
        return self.execute_action(action, obj)

    def execute_action(self, action, obj):
        if action == "–æ—Å–º–æ—Ç—Ä–µ—Ç—å":
            return self.examine_object(obj)
        elif action == "–≤–∑—è—Ç—å":
            return self.take_object(obj)
        elif action == "–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å":
            return self.use_object(obj)
        elif action == "–∏–¥—Ç–∏":
            return self.move_to(obj)
        return True

    def examine_object(self, obj):
        if obj in self.objects_description:
            print(f"\n{self.objects_description[obj]}")
            self.interacted_objects.add(obj)
            
            if obj == "—Å—É–Ω–¥—É–∫" and self.objects_state["–∫–ª—é—á"] == "–Ω–µ –Ω–∞–π–¥–µ–Ω":
                print("–°—É–Ω–¥—É–∫ –∑–∞–ø–µ—Ä—Ç. –ú–æ–∂–µ—Ç –±—ã—Ç—å, –∫–ª—é—á –≥–¥–µ-—Ç–æ —Ä—è–¥–æ–º?")
            elif obj == "–∫–∞—Ä—Ç–∏–Ω–∞":
                print("–ó–∞ –∫–∞—Ä—Ç–∏–Ω–æ–π —á—Ç–æ-—Ç–æ –±–ª–µ—Å–Ω—É–ª–æ...")
            elif obj == "–∫–æ–≤–µ—Ä" and "–∫–ª—é—á" not in self.player_inventory:
                print("–ö–æ–≤–µ—Ä –≤—ã–≥–ª—è–¥–∏—Ç –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ. –ú–æ–∂–µ—Ç –±—ã—Ç—å, –ø–æ–¥ –Ω–∏–º —á—Ç–æ-—Ç–æ –µ—Å—Ç—å?")
            elif obj == "–¥–≤–µ—Ä—å":
                if self.objects_state["–¥–≤–µ—Ä—å"] == "–∑–∞–ø–µ—Ä—Ç–∞":
                    print("–î–≤–µ—Ä—å –Ω–∞–¥–µ–∂–Ω–æ –∑–∞–ø–µ—Ä—Ç–∞. –ù—É–∂–Ω–æ –Ω–∞–π—Ç–∏ –∫–ª—é—á.")
                else:
                    print("–î–≤–µ—Ä—å –æ—Ç–∫—Ä—ã—Ç–∞! –ú–æ–∂–Ω–æ –ø—Ä–æ–π—Ç–∏ –¥–∞–ª—å—à–µ.")
            
            return True
        else:
            print("\n–ù–µ –≤–∏–∂—É —Ç–∞–∫–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ –¥–ª—è –æ—Å–º–æ—Ç—Ä–∞.")
            return True

    def take_object(self, obj):
        if obj == "–∫–ª—é—á" and "–∫–ª—é—á" not in self.player_inventory:
            if self.objects_state["–∫–ª—é—á"] == "–Ω–∞–π–¥–µ–Ω":
                self.player_inventory.append("–∫–ª—é—á")
                print(f"{BOLD}\n–í—ã –≤–∑—è–ª–∏ —Ä–∂–∞–≤—ã–π –∫–ª—é—á!{RESET}")
                return True
            else:
                print("\n–°–Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ –Ω–∞–π—Ç–∏ –∫–ª—é—á!")
                return True
        elif obj == "–∫–ª—é—á" and "–∫–ª—é—á" in self.player_inventory:
            print("\n–ö–ª—é—á —É–∂–µ —É –≤–∞—Å –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ")
            return True
        else:
            print("\n–≠—Ç–æ –Ω–µ–ª—å–∑—è –≤–∑—è—Ç—å.")
            return True

    def use_object(self, obj):
        if obj == "–∫–ª—é—á":
            if "–∫–ª—é—á" in self.player_inventory:
                return self.use_key()
            else:
                print("\n–£ –≤–∞—Å –Ω–µ—Ç –∫–ª—é—á–∞!")
        elif obj == "–¥–≤–µ—Ä—å":
            return self.use_door()
        else:
            print("\n–≠—Ç–æ –Ω–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º.")
        
        return True

    def move_to(self, obj):
        if obj == "–∫–∞—Ä—Ç–∏–Ω–∞":
            print("\n–í—ã –ø–æ–¥–æ—à–ª–∏ –∫ –∫–∞—Ä—Ç–∏–Ω–µ. –ü—Ä–∏ –±–ª–∏–∂–∞–π—à–µ–º —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏ –∑–∞–º–µ—á–∞–µ—Ç–µ, —á—Ç–æ –æ–Ω–∞ –Ω–µ–º–Ω–æ–≥–æ –æ—Ç—Ö–æ–¥–∏—Ç –æ—Ç —Å—Ç–µ–Ω—ã.")
            if "–∫–ª—é—á" not in self.player_inventory and self.objects_state["–∫–ª—é—á"] == "–Ω–µ –Ω–∞–π–¥–µ–Ω":
                print("–ó–∞ –∫–∞—Ä—Ç–∏–Ω–æ–π –≤—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ —Ä–∂–∞–≤—ã–π –∫–ª—é—á!")
                self.objects_state["–∫–ª—é—á"] = "–Ω–∞–π–¥–µ–Ω"
            return True
        elif obj == "–∫–æ–≤–µ—Ä":
            print("\n–í—ã –ø–æ–¥–Ω—è–ª–∏ –∫—Ä–∞–π –∫–æ–≤—Ä–∞. –ü–æ–¥ –Ω–∏–º –æ–±—ã—á–Ω—ã–π –∫–∞–º–µ–Ω–Ω—ã–π –ø–æ–ª.")
            return True
        elif obj == "—Å—É–Ω–¥—É–∫":
            print("\n–í—ã –ø–æ–¥–æ—à–ª–∏ –∫ —Å—É–Ω–¥—É–∫—É. –û–Ω –∑–∞–ø–µ—Ä—Ç.")
            return True
        elif obj == "–¥–≤–µ—Ä—å":
            print("\n–í—ã —Å—Ç–æ–∏—Ç–µ –ø–µ—Ä–µ–¥ –º–∞—Å—Å–∏–≤–Ω–æ–π –¥–≤–µ—Ä—å—é.")
            if self.objects_state["–¥–≤–µ—Ä—å"] == "–æ—Ç–∫—Ä—ã—Ç–∞":
                return self.complete_level()
            else:
                print("–î–≤–µ—Ä—å –∑–∞–ø–µ—Ä—Ç–∞. –ù—É–∂–Ω–æ –Ω–∞–π—Ç–∏ —Å–ø–æ—Å–æ–± –æ—Ç–∫—Ä—ã—Ç—å –µ–µ.")
            return True
        else:
            print("\n–ù–µ –º–æ–≥—É –ø–æ–¥–æ–π—Ç–∏ –∫ —ç—Ç–æ–º—É –æ–±—ä–µ–∫—Ç—É.")
            return True

    def use_key(self):
        print("\n–í—ã –ø—ã—Ç–∞–µ—Ç–µ—Å—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–ª—é—á...")
        time.sleep(1)
        
        if "–¥–≤–µ—Ä—å" in self.interacted_objects or input("–í—ã —É –¥–≤–µ—Ä–∏? (–¥–∞/–Ω–µ—Ç): ").lower() == "–¥–∞":
            print("–†–∂–∞–≤—ã–π –∫–ª—é—á —Å —Ç—Ä—É–¥–æ–º –ø–æ–≤–æ—Ä–∞—á–∏–≤–∞–µ—Ç—Å—è –≤ –∑–∞–º–∫–µ...")
            time.sleep(2)
            print("–©–ï–õ–ö! –ó–∞–º–æ–∫ –ø–æ–¥–¥–∞–µ—Ç—Å—è!")
            self.objects_state["–¥–≤–µ—Ä—å"] = "–æ—Ç–∫—Ä—ã—Ç–∞"
            print("–î–≤–µ—Ä—å –æ—Ç–∫—Ä—ã—Ç–∞! –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –ø—Ä–æ–π—Ç–∏ –¥–∞–ª—å—à–µ.")
            return True
        else:
            print("–ó–¥–µ—Å—å –Ω–µ –∫ —á–µ–º—É –ø—Ä–∏–º–µ–Ω–∏—Ç—å –∫–ª—é—á. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–¥–æ–π—Ç–∏ –∫ –¥–≤–µ—Ä–∏.")
            return True

    def use_door(self):
        if self.objects_state["–¥–≤–µ—Ä—å"] == "–æ—Ç–∫—Ä—ã—Ç–∞":
            return self.complete_level()
        else:
            print("\n–î–≤–µ—Ä—å –∑–∞–ø–µ—Ä—Ç–∞. –ù—É–∂–Ω–æ –Ω–∞–π—Ç–∏ –∫–ª—é—á.")
            return True

    def complete_level(self):
        print(f"\n{BOLD}–î–≤–µ—Ä—å —Å —Å–∫—Ä–∏–ø–æ–º –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è...{RESET}")
        time.sleep(2)
        print(f"{ITALIC}")
        print("–í—ã –ø—Ä–æ—Ö–æ–¥–∏—Ç–µ —á–µ—Ä–µ–∑ –¥–≤–µ—Ä—å –∏ –æ–∫–∞–∑—ã–≤–∞–µ—Ç–µ—Å—å –≤ —Å–ª–µ–¥—É—é—â–µ–º –ø–æ–º–µ—â–µ–Ω–∏–∏.")
        print("–í–æ–∑–¥—É—Ö –Ω–∞–ø–æ–ª–Ω—è–µ—Ç—Å—è —Å—Ç—Ä–∞–Ω–Ω—ã–º–∏ –∞—Ä–æ–º–∞—Ç–∞–º–∏ —Ç—Ä–∞–≤ –∏ —Ö–∏–º–∏–∫–∞—Ç–æ–≤.")
        print("–≠—Ç–æ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –∞–ª—Ö–∏–º–∏–∫–∞...")
        print(f"{RESET}")
        
        print(f"\n{BOLD}üéâ –í–´ –£–°–ü–ï–®–ù–û –ü–†–û–®–õ–ò 1 –£–†–û–í–ï–ù–¨! üéâ{RESET}")
        print("–≠–ª–ª–∏ –ø–æ–ø–∞–¥–∞–µ—Ç –≤ –ë–∏–±–ª–∏–æ—Ç–µ–∫—É –∑–Ω–∞–Ω–∏–π –∏ —è–¥–æ–≤–∏—Ç–æ–≥–æ –∑–µ–ª—å—è...")
        
        time.sleep(3)
        return False

    def show_help(self):
        print("\n=== –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã ===")
        print("–æ—Å–º–æ—Ç—Ä–µ—Ç—å [–æ–±—ä–µ–∫—Ç] - –æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ–±—ä–µ–∫—Ç")
        print("–≤–∑—è—Ç—å [–æ–±—ä–µ–∫—Ç] - –≤–∑—è—Ç—å –æ–±—ä–µ–∫—Ç –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å")
        print("–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å [–æ–±—ä–µ–∫—Ç] - –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–±—ä–µ–∫—Ç")
        print("–∏–¥—Ç–∏ [–æ–±—ä–µ–∫—Ç] - –ø–æ–¥–æ–π—Ç–∏ –∫ –æ–±—ä–µ–∫—Ç—É")
        print("–∏–Ω–≤–µ–Ω—Ç–∞—Ä—å - –ø–æ–∫–∞–∑–∞—Ç—å –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å")
        print("–≤—ã—Ö–æ–¥ - –≤—ã–π—Ç–∏ –∏–∑ –∏–≥—Ä—ã")
        print("\n=== –û–±—ä–µ–∫—Ç—ã –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è ===")
        print("—Ö–æ–ª–ª, –¥–≤–µ—Ä—å, —Å—É–Ω–¥—É–∫, –∫–∞—Ä—Ç–∏–Ω–∞, –∫–æ–≤–µ—Ä, –∫–ª—é—á")

    def start_level(self):
        print("\n" + "="*60)
        print(f"{BOLD}–£–†–û–í–ï–ù–¨ 1: –ó–∞–±—ã—Ç—ã–π —Ö–æ–ª–ª{RESET}")
        print("="*60)
        
        print(f"""{ITALIC}
–≠–ª–ª–∏ –ø—Ä–æ—Å—ã–ø–∞–µ—Ç—Å—è –≤ –ó–∞–±—ã—Ç–æ–º —Ö–æ–ª–ª–µ –ò–∑—É–º—Ä—É–¥–Ω–æ–≥–æ –∑–∞–º–∫–∞. 
–í–æ–∑–¥—É—Ö —Ö–æ–ª–æ–¥–µ–Ω –∏ –ø—ã–ª–µ–Ω. –í–ø–µ—Ä–µ–¥–∏ - –º–∞—Å—Å–∏–≤–Ω–∞—è –¥–≤–µ—Ä—å, –∫–æ—Ç–æ—Ä–∞—è –∫–∞–∂–µ—Ç—Å—è 
–µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–º –≤—ã—Ö–æ–¥–æ–º –∏–∑ —ç—Ç–æ–≥–æ –º–µ—Å—Ç–∞. –ì–¥–µ-—Ç–æ –∑–¥–µ—Å—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∫–ª—é—á...
        {RESET}""")
        
        print("\n–í–≤–µ–¥–∏—Ç–µ '–ø–æ–º–æ—â—å' –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥")
        
        while True:
            print("\n" + "-"*40)
            command = input("\n–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å? ")
            
            if not self.process_command(command):
                break
        
        return self.player_inventory

class Level2:
    def __init__(self, previous_inventory=None):
        self.player_inventory = previous_inventory if previous_inventory else []
        self.available_actions = ["–æ—Å–º–æ—Ç—Ä–µ—Ç—å", "–≤–∑—è—Ç—å", "–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å", "—á–∏—Ç–∞—Ç—å", "–∏–Ω–≤–µ–Ω—Ç–∞—Ä—å"]
        self.interacted_objects = set()
        
        self.objects_description = {
            "—Å—Ç–æ–ª": "–ê–ª—Ö–∏–º–∏—á–µ—Å–∫–∏–π —Å—Ç–æ–ª —Å –∫–æ–ª–±–∞–º–∏, —Ä–µ—Ç–æ—Ä—Ç–∞–º–∏ –∏ —Å—Ç—É–ø–∫–∞–º–∏",
            "—Ñ–ª–∞–∫–æ–Ω—ã": "–î–≤–∞ —Ñ–ª–∞–∫–æ–Ω–∞: –≥–æ–ª—É–±–æ–≤–∞—Ç—ã–π –∏ –±–∞–≥—Ä—è–Ω—ã–π",
            "–≥–æ–ª—É–±–æ–π_—Ñ–ª–∞–∫–æ–Ω": "–§–ª–∞–∫–æ–Ω —Å –ø—Ä–∏–∑—Ä–∞—á–Ω—ã–º –≥–æ–ª—É–±–æ–≤–∞—Ç—ã–º —Å–∏—è–Ω–∏–µ–º",
            "–±–∞–≥—Ä—è–Ω—ã–π_—Ñ–ª–∞–∫–æ–Ω": "–§–ª–∞–∫–æ–Ω, –ø—É–ª—å—Å–∏—Ä—É—é—â–∏–π –∑–ª–æ–≤–µ—â–∏–º –±–∞–≥—Ä—è–Ω—ã–º —Å–≤–µ—Ç–æ–º",
            "—Å–≤–∏—Ç–∫–∏": "–î–≤–∞ —Å—Ç–∞—Ä–∏–Ω–Ω—ã—Ö —Å–≤–∏—Ç–∫–∞ –Ω–∞ —Å—Ç–æ–ª–µ",
            "–ø–µ—Ä–≤—ã–π_—Å–≤–∏—Ç–æ–∫": "–°–≤–∏—Ç–æ–∫ —Å –æ–±–≥–æ—Ä–µ–≤—à–∏–º–∏ –∫—Ä–∞—è–º–∏ –∏ —Å–∏–º–≤–æ–ª–∞–º–∏ –∑–æ–¥–∏–∞–∫–∞ –≤–æ–∫—Ä—É–≥ –ø–ª–∞–º–µ–Ω–∏",
            "–≤—Ç–æ—Ä–æ–π_—Å–≤–∏—Ç–æ–∫": "–°–≤–∏—Ç–æ–∫ —Å —Å–∏–º–≤–æ–ª–∞–º–∏: –ø–æ–ª—É–º–µ—Å—è—Ü, –∫–∞–ø–ª—è, –ø–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç–∞—è –ø–∏—Ä–∞–º–∏–¥–∞",
            "—Ñ–æ–ª–∏–∞–Ω—Ç": "–¢–æ–ª—Å—Ç–∞—è –∫–Ω–∏–≥–∞ –≤ –∫–æ–∂–∞–Ω–æ–º –ø–µ—Ä–µ–ø–ª–µ—Ç–µ –æ –∞–ª—Ö–∏–º–∏–∏",
            "–ø–æ–ª–∫–∏": "–ó–∞–ø—ã–ª–µ–Ω–Ω—ã–µ –ø–æ–ª–∫–∏ —Å –∫–Ω–∏–≥–∞–º–∏ –∏ —Å–≤–∏—Ç–∫–∞–º–∏"
        }
        
        self.level_tasks = {
            "—É—Ä–æ–≤–µ–Ω—å_2": {
                "–æ—Å–º–æ—Ç—Ä–µ–Ω–æ_—Å—Ç–æ–ª": False,
                "–ø—Ä–æ—á–∏—Ç–∞–Ω–æ_—Å–≤–∏—Ç–∫–∏": False,
                "–Ω–∞–π–¥–µ–Ω–∞_–∫–Ω–∏–≥–∞": False,
                "–≤—ã–±—Ä–∞–Ω–æ_–∑–µ–ª—å–µ": False
            }

        
        self.player_stats = {
            "–∑–¥–æ—Ä–æ–≤—å–µ": 100,
            "–æ—Ç—Ä–∞–≤–ª–µ–Ω–∏–µ": 30,
            "—Å—Ç–∞—Ç—É—Å": "–æ—Ç—Ä–∞–≤–ª–µ–Ω"
        }

    def show_inventory(self):
        if not self.player_inventory:
            print("\n–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å –ø—É—Å—Ç.")
        else:
            print(f"\n–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å: {', '.join(self.player_inventory)}")

    def show_health(self):
        print(f"\n–ó–¥–æ—Ä–æ–≤—å–µ: {self.player_stats['–∑–¥–æ—Ä–æ–≤—å–µ']}%")
        print(f"–û—Ç—Ä–∞–≤–ª–µ–Ω–∏–µ: {self.player_stats['–æ—Ç—Ä–∞–≤–ª–µ–Ω–∏–µ']}%")
        print(f"–°—Ç–∞—Ç—É—Å: {self.player_stats['—Å—Ç–∞—Ç—É—Å']}")

    def process_command(self, command):
        command = command.lower().strip()
        
        if command == "–∏–Ω–≤–µ–Ω—Ç–∞—Ä—å":
            self.show_inventory()
            return True
        elif command == "–∑–¥–æ—Ä–æ–≤—å–µ":
            self.show_health()
            return True
        elif command == "–ø–æ–º–æ—â—å":
            self.show_help()
            return True
        elif command == "–≤—ã—Ö–æ–¥":
            return False
        
        parts = command.split()
        if len(parts) < 2:
            print("–ù–µ –ø–æ–Ω—è–ª –∫–æ–º–∞–Ω–¥—É. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: –¥–µ–π—Å—Ç–≤–∏–µ –æ–±—ä–µ–∫—Ç")
            return True
        
        action = parts[0]
        obj = "_".join(parts[1:])
        
        if action not in self.available_actions:
            print(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ. –î–æ—Å—Ç—É–ø–Ω—ã–µ: {', '.join(self.available_actions)}")
            return True
        
        return self.execute_action(action, obj)

    def execute_action(self, action, obj):
        if action == "–æ—Å–º–æ—Ç—Ä–µ—Ç—å":
            return self.examine_object(obj)
        elif action == "–≤–∑—è—Ç—å":
            return self.take_object(obj)
        elif action == "–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å":
            return self.use_object(obj)
        elif action == "—á–∏—Ç–∞—Ç—å":
            return self.read_object(obj)
        return True

    def examine_object(self, obj):
        if obj in self.objects_description:
            print(f"\n{self.objects_description[obj]}")
            self.interacted_objects.add(obj)
            
            if obj == "—Å—Ç–æ–ª":
                self.level_tasks["—É—Ä–æ–≤–µ–Ω—å_2"]["–æ—Å–º–æ—Ç—Ä–µ–Ω–æ_—Å—Ç–æ–ª"] = True
                print("–ù–∞ —Å—Ç–æ–ª–µ –≤—ã –≤–∏–¥–∏—Ç–µ –¥–≤–∞ —Ñ–ª–∞–∫–æ–Ω–∞ –∏ —Å–≤–∏—Ç–∫–∏.")
            elif obj == "—Ñ–ª–∞–∫–æ–Ω—ã":
                print("–û–¥–∏–Ω —Ñ–ª–∞–∫–æ–Ω –∏–∑–ª—É—á–∞–µ—Ç –≥–æ–ª—É–±–æ–≤–∞—Ç–æ–µ —Å–∏—è–Ω–∏–µ, –¥—Ä—É–≥–æ–π - –±–∞–≥—Ä—è–Ω–æ–µ.")
            
            return True
        else:
            print("\n–ù–µ –≤–∏–∂—É —Ç–∞–∫–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ –¥–ª—è –æ—Å–º–æ—Ç—Ä–∞.")
            return True

    def take_object(self, obj):
        takable_objects = ["–≥–æ–ª—É–±–æ–π_—Ñ–ª–∞–∫–æ–Ω", "–±–∞–≥—Ä—è–Ω—ã–π_—Ñ–ª–∞–∫–æ–Ω", "—Ñ–æ–ª–∏–∞–Ω—Ç", "–ø–µ—Ä–≤—ã–π_—Å–≤–∏—Ç–æ–∫", "–≤—Ç–æ—Ä–æ–π_—Å–≤–∏—Ç–æ–∫"]
        
        if obj in takable_objects:
            if obj not in self.player_inventory:
                self.player_inventory.append(obj)
                print(f"{BOLD}\n–í—ã –≤–∑—è–ª–∏ {obj.replace('_', ' ')}{RESET}")
                
                if obj == "—Ñ–æ–ª–∏–∞–Ω—Ç":
                    self.level_tasks["—É—Ä–æ–≤–µ–Ω—å_2"]["–Ω–∞–π–¥–µ–Ω–∞_–∫–Ω–∏–≥–∞"] = True
            else:
                print(f"\n{obj.replace('_', ' ')} —É–∂–µ –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ")
        else:
            print("\n–≠—Ç–æ –Ω–µ–ª—å–∑—è –≤–∑—è—Ç—å.")
        
        return True

    def read_object(self, obj):
        readable_objects = {
            "–ø–µ—Ä–≤—ã–π_—Å–≤–∏—Ç–æ–∫": "–í—ã –∏–∑—É—á–∞–µ—Ç–µ –ø–µ—Ä–≤—ã–π —Å–≤–∏—Ç–æ–∫: —Å—Ç—Ä–∞–Ω–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã –∑–æ–¥–∏–∞–∫–∞ –≤–æ–∫—Ä—É–≥ —Ä–∏—Å—É–Ω–∫–∞ –ø–ª–∞–º–µ–Ω–∏. –ù–µ–ø–æ–Ω—è—Ç–Ω–∞—è –Ω–∞–¥–ø–∏—Å—å –Ω–∞ –Ω–µ–∑–Ω–∞–∫–æ–º–æ–º —è–∑—ã–∫–µ.",
            "–≤—Ç–æ—Ä–æ–π_—Å–≤–∏—Ç–æ–∫": "–í—ã –∏–∑—É—á–∞–µ—Ç–µ –≤—Ç–æ—Ä–æ–π —Å–≤–∏—Ç–æ–∫: —Å–∏–º–≤–æ–ª—ã - –ø–æ–ª—É–º–µ—Å—è—Ü, –∫–∞–ø–ª—è, –ø–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç–∞—è –ø–∏—Ä–∞–º–∏–¥–∞.",
            "—Ñ–æ–ª–∏–∞–Ω—Ç": f"""{BOLD}–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ —Ä–∞–∑–¥–µ–ª "–õ–µ—á–µ–Ω–∏–µ –ù–µ–¥—É–≥–∞ –û–≥–Ω–µ–Ω–Ω–æ–≥–æ –°–µ—Ä–¥—Ü–∞":
–†–µ—Ü–µ–ø—Ç –∏—Å—Ü–µ–ª—è—é—â–µ–≥–æ –∑–µ–ª—å—è: 
"–î–ª—è —É—Å–º–∏—Ä–µ–Ω–∏—è –ø–ª–∞–º–µ–Ω–∏ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ, –≤–æ–∑—å–º–∏ —Ç—Ä–∞–≤—É –ª—É–Ω–Ω–æ–≥–æ —Å–µ—Ä–µ–±—Ä–∞ (—Å–∏–º–≤–æ–ª - –ø–æ–ª—É–º–µ—Å—è—Ü), 
–¥–æ–±–∞–≤—å –∫–∞–ø–ª—é —Ä–æ—Å—ã —É—Ç—Ä–µ–Ω–Ω–µ–π (—Å–∏–º–≤–æ–ª - –∫–∞–ø–ª—è), –∏ —É–∫—Ä–æ—Ç–∏ —Å–∏–ª—É –∑–µ–º–ª–∏ (—Å–∏–º–≤–æ–ª - –ø–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç–∞—è –ø–∏—Ä–∞–º–∏–¥–∞)."

–ü–†–ï–î–û–°–¢–ï–†–ï–ñ–ï–ù–ò–ï: 
"–ë–µ—Ä–µ–≥–∏—Å—å –ø–æ–¥–¥–µ–ª–æ–∫! –ó–µ–ª—å–µ, —Å–æ–∑–¥–∞–Ω–Ω–æ–µ –∏–∑ —Ç–µ–Ω–∏ —Å–º–µ—Ä—Ç–Ω–æ–π (–±–∞–≥—Ä–æ–≤—ã–π —Ñ–ª–∞–∫–æ–Ω), 
–ª–∏—à—å —É—Å–∏–ª–∏—Ç –ø–ª–∞–º—è, –ø—Ä–∏–≤–µ–¥—è –∫ –Ω–µ–º–∏–Ω—É–µ–º–æ–π –≥–∏–±–µ–ª–∏.{RESET}"""
        }
        
        if obj in readable_objects:
            if obj in self.player_inventory or obj in ["–ø–µ—Ä–≤—ã–π_—Å–≤–∏—Ç–æ–∫", "–≤—Ç–æ—Ä–æ–π_—Å–≤–∏—Ç–æ–∫"]:
                print(f"\n{readable_objects[obj]}")
                
                if obj in ["–ø–µ—Ä–≤—ã–π_—Å–≤–∏—Ç–æ–∫", "–≤—Ç–æ—Ä–æ–π_—Å–≤–∏—Ç–æ–∫"]:
                    self.level_tasks["—É—Ä–æ–≤–µ–Ω—å_2"]["–ø—Ä–æ—á–∏—Ç–∞–Ω–æ_—Å–≤–∏—Ç–∫–∏"] = True
                
                return True
            else:
                print(f"\n–°–Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ –≤–∑—è—Ç—å {obj.replace('_', ' ')}")
                return True
        else:
            print("\n–≠—Ç–æ –Ω–µ–ª—å–∑—è –ø—Ä–æ—á–∏—Ç–∞—Ç—å.")
            return True

    def use_object(self, obj):
        if obj == "–≥–æ–ª—É–±–æ–π_—Ñ–ª–∞–∫–æ–Ω":
            if obj in self.player_inventory:
                return self.drink_potion("–≥–æ–ª—É–±–æ–π")
            else:
                print("\n–°–Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ –≤–∑—è—Ç—å –≥–æ–ª—É–±–æ–π —Ñ–ª–∞–∫–æ–Ω")
        elif obj == "–±–∞–≥—Ä—è–Ω—ã–π_—Ñ–ª–∞–∫–æ–Ω":
            if obj in self.player_inventory:
                return self.drink_potion("–±–∞–≥—Ä—è–Ω—ã–π")
            else:
                print("\n–°–Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ –≤–∑—è—Ç—å –±–∞–≥—Ä—è–Ω—ã–π —Ñ–ª–∞–∫–æ–Ω")
        else:
            print("\n–≠—Ç–æ –Ω–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º.")
        
        return True

    def drink_potion(self, potion_type):
        print(f"\n–≠–ª–ª–∏ –≤—ã–ø–∏–≤–∞–µ—Ç {potion_type} —Ñ–ª–∞–∫–æ–Ω...")
        time.sleep(2)
        
        if potion_type == "–≥–æ–ª—É–±–æ–π":
            print("–û–Ω–∞ —á—É–≤—Å—Ç–≤—É–µ—Ç, –∫–∞–∫ –∂–∞—Ä –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ —É—Ö–æ–¥–∏—Ç.")
            print("–¢–µ–ª–æ –Ω–∞–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø—Ä–∏—è—Ç–Ω–æ–π –ø—Ä–æ—Ö–ª–∞–¥–æ–π. –ò—Å—Ü–µ–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!")
            self.player_stats["–∑–¥–æ—Ä–æ–≤—å–µ"] = 100
            self.player_stats["–æ—Ç—Ä–∞–≤–ª–µ–Ω–∏–µ"] = 0
            self.player_stats["—Å—Ç–∞—Ç—É—Å"] = "–∑–¥–æ—Ä–æ–≤"
            self.level_tasks["—É—Ä–æ–≤–µ–Ω—å_2"]["–≤—ã–±—Ä–∞–Ω–æ_–∑–µ–ª—å–µ"] = True
            
            print("\nüéâ –í–´ –£–°–ü–ï–®–ù–û –ü–†–û–®–õ–ò 2 –£–†–û–í–ï–ù–¨! üéâ")
            print("–≠–ª–ª–∏ –∏—Å—Ü–µ–ª–∏–ª–∞—Å—å –∏ –≥–æ—Ç–æ–≤–∞ –∫ —Å–ª–µ–¥—É—é—â–∏–º –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è–º!")
            return False
        else:
            print("–ü—Ä–∏ –ø–µ—Ä–≤–æ–º –∂–µ –≥–ª–æ—Ç–∫–µ –∂–∞—Ä –≤ —Ç–µ–ª–µ —É—Å–∏–ª–∏–≤–∞–µ—Ç—Å—è –≤—Ç—Ä–æ–µ!")
            print("–ü–ª–∞–º—è –∂–∏–∑–Ω–∏ —É–≥–∞—Å–∞–µ—Ç, –æ—Å—Ç–∞–≤–ª—è—è –ª–∏—à—å –ª–µ–¥—è–Ω—É—é –ø—É—Å—Ç–æ—Ç—É...")
            self.player_stats["–∑–¥–æ—Ä–æ–≤—å–µ"] = 0
            self.player_stats["–æ—Ç—Ä–∞–≤–ª–µ–Ω–∏–µ"] = 100
            self.player_stats["—Å—Ç–∞—Ç—É—Å"] = "–º–µ—Ä—Ç–≤"
            print("–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞. –≠–ª–ª–∏ —Å—Ç–∞–ª–∞ –µ—â–µ –æ–¥–Ω–æ–π –∂–µ—Ä—Ç–≤–æ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–∏.")
            return False

    def show_help(self):
        print("\n=== –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã ===")
        print("–æ—Å–º–æ—Ç—Ä–µ—Ç—å [–æ–±—ä–µ–∫—Ç] - –æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ–±—ä–µ–∫—Ç")
        print("–≤–∑—è—Ç—å [–æ–±—ä–µ–∫—Ç] - –≤–∑—è—Ç—å –æ–±—ä–µ–∫—Ç –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å")
        print("–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å [–æ–±—ä–µ–∫—Ç] - –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–±—ä–µ–∫—Ç")
        print("—á–∏—Ç–∞—Ç—å [–æ–±—ä–µ–∫—Ç] - –ø—Ä–æ—á–∏—Ç–∞—Ç—å –æ–±—ä–µ–∫—Ç")
        print("–∏–Ω–≤–µ–Ω—Ç–∞—Ä—å - –ø–æ–∫–∞–∑–∞—Ç—å –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å")
        print("–∑–¥–æ—Ä–æ–≤—å–µ - –ø–æ–∫–∞–∑–∞—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–¥–æ—Ä–æ–≤—å—è")
        print("–≤—ã—Ö–æ–¥ - –≤—ã–π—Ç–∏ –∏–∑ –∏–≥—Ä—ã")
        print("\n=== –û–±—ä–µ–∫—Ç—ã –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è ===")
        print("—Å—Ç–æ–ª, —Ñ–ª–∞–∫–æ–Ω—ã, –≥–æ–ª—É–±–æ–π_—Ñ–ª–∞–∫–æ–Ω, –±–∞–≥—Ä—è–Ω—ã–π_—Ñ–ª–∞–∫–æ–Ω")
        print("—Å–≤–∏—Ç–∫–∏, –ø–µ—Ä–≤—ã–π_—Å–≤–∏—Ç–æ–∫, –≤—Ç–æ—Ä–æ–π_—Å–≤–∏—Ç–æ–∫, —Ñ–æ–ª–∏–∞–Ω—Ç, –ø–æ–ª–∫–∏")

    def start_level(self):
        print("\n" + "="*60)
        print(f"{BOLD}–£–†–û–í–ï–ù–¨ 2: –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –∑–Ω–∞–Ω–∏–π –∏ —è–¥–æ–≤–∏—Ç–æ–≥–æ –∑–µ–ª—å—è{RESET}")
        print("="*60)
        
        print(f"""{ITALIC}
–≠–ª–ª–∏ –≤—Ö–æ–¥–∏—Ç –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫—É, —á—É–≤—Å—Ç–≤—É—è –∫–∞–∫ –ø–æ —Ç–µ–ª—É —Ä–∞–∑–ª–∏–≤–∞–µ—Ç—Å—è –Ω–µ–≤–µ–¥–æ–º—ã–π –∂–∞—Ä.
–í —Ü–µ–Ω—Ç—Ä–µ –∑–∞–ª—ã –≤–æ–∑–≤—ã—à–∞–µ—Ç—Å—è –∞–ª—Ö–∏–º–∏—á–µ—Å–∫–∏–π —Å—Ç–æ–ª, —Å–ª–æ–≤–Ω–æ –∞–ª—Ç–∞—Ä—å –Ω–∞—É—á–Ω–æ–≥–æ –∫–æ–ª–¥–æ–≤—Å—Ç–≤–∞.
–ù–∞ –Ω–µ–º, —Å—Ä–µ–¥–∏ –∫–æ–ª–±, —Ä–µ—Ç–æ—Ä—Ç –∏ —Å—Ç—É–ø–æ–∫, –ø–æ–∫–æ—è—Ç—Å—è –¥–≤–∞ —Ñ–ª–∞–∫–æ–Ω–∞...
        {RESET}""")
        
        self.show_health()
        print("\n–í–≤–µ–¥–∏—Ç–µ '–ø–æ–º–æ—â—å' –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥")
        
        while True:
            print("\n" + "-"*40)
            command = input("\n–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å? ")
            
            if not self.process_command(command):
                break
            
            if self.player_stats["–∑–¥–æ—Ä–æ–≤—å–µ"] <= 0:
                print("\n–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞!")
                break
            elif self.level_tasks["—É—Ä–æ–≤–µ–Ω—å_2"]["–≤—ã–±—Ä–∞–Ω–æ_–∑–µ–ª—å–µ"]:
                print("\n–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—à–ª–∏ —É—Ä–æ–≤–µ–Ω—å 2!")
                break
        
        return self.player_inventory

class Level3:
    def __init__(self, previous_inventory=None):
        self.player_inventory = previous_inventory if previous_inventory else []
        self.available_actions = ["–æ—Å–º–æ—Ç—Ä–µ—Ç—å", "–≤–∑—è—Ç—å", "–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å", "—á–∏—Ç–∞—Ç—å", "–æ—Ç–≤–µ—Ç–∏—Ç—å", "–∏–Ω–≤–µ–Ω—Ç–∞—Ä—å"]
        self.interacted_objects = set()
        
        self.objects_description = {
            "–∫–æ–º–Ω–∞—Ç–∞": "–ö—Ä—É–≥–ª–∞—è –∫–æ–º–Ω–∞—Ç–∞ –±–µ–∑ –æ–∫–æ–Ω —Å –ø—Ä–∏–∑—Ä–∞—á–Ω—ã–º –ª—É–Ω–Ω—ã–º —Å–≤–µ—Ç–æ–º, –∏—Å—Ö–æ–¥—è—â–∏–º –æ—Ç –æ–≥—Ä–æ–º–Ω–æ–≥–æ –∑–µ—Ä–∫–∞–ª–∞",
            "–∑–µ—Ä–∫–∞–ª–æ": "–û–≥—Ä–æ–º–Ω–æ–µ –∑–µ—Ä–∫–∞–ª–æ, –∑–∞–Ω–∏–º–∞—é—â–µ–µ –ø–æ—á—Ç–∏ –≤—Å—é —Å—Ç–µ–Ω—É. –í –Ω–µ–º –º–µ—Ä—Ü–∞—é—Ç —Ä–∞–∑–º—ã—Ç—ã–µ –æ–±—Ä–∞–∑—ã –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏–π",
            "–Ω–∞–¥–ø–∏—Å—å": "–í—ã–≥—Ä–∞–≤–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –Ω–∞–¥–ø–∏—Å—å –Ω–∞ –¥—Ä–µ–≤–Ω–µ–º —è–∑—ã–∫–µ –Ω–∞–¥ –∑–µ—Ä–∫–∞–ª–æ–º",
            "—Å—Ç–æ–ª–∏–∫": "–ù–µ–±–æ–ª—å—à–æ–π —Å—Ç–æ–ª–∏–∫ –∏–∑ —Å–ª–æ–Ω–æ–≤–æ–π –∫–æ—Å—Ç–∏ –ø–æ–¥ –∑–µ—Ä–∫–∞–ª–æ–º",
            "–∑–æ–ª–æ—Ç–∞—è_—Ä–∞–º–∫–∞": "–¢–æ–Ω–∫–∞—è –∑–æ–ª–æ—Ç–∞—è —Ä–∞–º–∫–∞ –Ω–∞ —Å—Ç–æ–ª–∏–∫–µ, –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–Ω–∞—è –¥–ª—è –æ–±—Ä–∞–º–ª–µ–Ω–∏—è —á–µ–≥–æ-–ª–∏–±–æ",
            "–∫–ª–µ—Ç–∫–∞_—Å_—â–µ–≥–ª–æ–º": "–°–µ—Ä–µ–±—Ä—è–Ω–∞—è –∫–ª–µ—Ç–∫–∞ —Å –±–µ—Å–ø–æ–∫–æ–π–Ω–æ –º–µ—á—É—â–∏–º—Å—è —â–µ–≥–ª–æ–º",
            "–∫–ª—É–±–æ–∫_–Ω–∏—Ç–æ–∫": "–ë–æ–ª—å—à–æ–π –∫–ª—É–±–æ–∫ —Å–≤–µ—Ä–∫–∞—é—â–∏—Ö –∑–æ–ª–æ—Ç—ã—Ö –Ω–∏—Ç–æ–∫, –∫–∞–∂—É—â–∏—Ö—Å—è –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–º–∏",
            "–≥–ª–∏–Ω—è–Ω–∞—è_–º–∞—Å–∫–∞": "–ü—Ä–æ—Å—Ç–∞—è –≥–ª–∏–Ω—è–Ω–∞—è –º–∞—Å–∫–∞, –∏–∑–æ–±—Ä–∞–∂–∞—é—â–∞—è –ª–∏—Ü–æ –º—É–¥—Ä–µ—Ü–∞ —Å –∑–∞–∫—Ä—ã—Ç—ã–º–∏ –≥–ª–∞–∑–∞–º–∏",
            "–ø–æ—Å—Ç–∞–º–µ–Ω—Ç—ã": "–¢—Ä–∏ –ø–æ—Å—Ç–∞–º–µ–Ω—Ç–∞ –≤–¥–æ–ª—å —Å—Ç–µ–Ω —Å –º–∞–≥–∏—á–µ—Å–∫–∏–º–∏ –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏"
        }
        
        self.riddle_solved = False
        self.riddle_answer = "–∑–µ—Ä–∫–∞–ª–æ"

    def show_inventory(self):
        if not self.player_inventory:
            print("\n–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å –ø—É—Å—Ç.")
        else:
            print(f"\n–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å: {', '.join(self.player_inventory)}")

    def process_command(self, command):
        command = command.lower().strip()
        
        if command == "–∏–Ω–≤–µ–Ω—Ç–∞—Ä—å":
            self.show_inventory()
            return True
        elif command == "–ø–æ–º–æ—â—å":
            self.show_help()
            return True
        elif command == "–≤—ã—Ö–æ–¥":
            return False
        
        parts = command.split()
        if len(parts) < 2:
            print("–ù–µ –ø–æ–Ω—è–ª –∫–æ–º–∞–Ω–¥—É. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: –¥–µ–π—Å—Ç–≤–∏–µ –æ–±—ä–µ–∫—Ç")
            return True
        
        action = parts[0]
        obj = "_".join(parts[1:])
        
        if action not in self.available_actions:
            print(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ. –î–æ—Å—Ç—É–ø–Ω—ã–µ: {', '.join(self.available_actions)}")
            return True
        
        return self.execute_action(action, obj)

    def execute_action(self, action, obj):
        if action == "–æ—Å–º–æ—Ç—Ä–µ—Ç—å":
            return self.examine_object(obj)
        elif action == "–≤–∑—è—Ç—å":
            return self.take_object(obj)
        elif action == "–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å":
            return self.use_object(obj)
        elif action == "—á–∏—Ç–∞—Ç—å":
            return self.read_object(obj)
        elif action == "–æ—Ç–≤–µ—Ç–∏—Ç—å":
            return self.answer_riddle(obj)
        return True

    def examine_object(self, obj):
        if obj in self.objects_description:
            print(f"\n{self.objects_description[obj]}")
            self.interacted_objects.add(obj)
            
            if obj == "–∑–µ—Ä–∫–∞–ª–æ":
                print("–í –∑–µ—Ä–∫–∞–ª–µ –≤—ã –≤–∏–¥–∏—Ç–µ —Ä–∞–∑–º—ã—Ç—ã–µ –æ–±—Ä–∞–∑—ã - –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏—è –∏–∑ –ø—Ä–æ—à–ª–æ–≥–æ...")
                print("–ù–∞–¥ –∑–µ—Ä–∫–∞–ª–æ–º –µ—Å—Ç—å –∫–∞–∫–∞—è-—Ç–æ –Ω–∞–¥–ø–∏—Å—å.")
            elif obj == "–ø–æ—Å—Ç–∞–º–µ–Ω—Ç—ã":
                print("–ù–∞ —Ç—Ä–µ—Ö –ø–æ—Å—Ç–∞–º–µ–Ω—Ç–∞—Ö —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω—ã: –∫–ª–µ—Ç–∫–∞ —Å —â–µ–≥–ª–æ–º, –∫–ª—É–±–æ–∫ –Ω–∏—Ç–æ–∫ –∏ –≥–ª–∏–Ω—è–Ω–∞—è –º–∞—Å–∫–∞.")
            elif obj == "—Å—Ç–æ–ª–∏–∫":
                print("–ù–∞ —Å—Ç–æ–ª–∏–∫–µ –ª–µ–∂–∏—Ç –∑–æ–ª–æ—Ç–∞—è —Ä–∞–º–∫–∞.")
            
            return True
        else:
            print("\n–ù–µ –≤–∏–∂—É —Ç–∞–∫–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ –¥–ª—è –æ—Å–º–æ—Ç—Ä–∞.")
            return True

    def take_object(self, obj):
        takable_objects = ["–∑–æ–ª–æ—Ç–∞—è_—Ä–∞–º–∫–∞", "–∫–ª–µ—Ç–∫–∞_—Å_—â–µ–≥–ª–æ–º", "–∫–ª—É–±–æ–∫_–Ω–∏—Ç–æ–∫", "–≥–ª–∏–Ω—è–Ω–∞—è_–º–∞—Å–∫–∞"]
        
        if obj in takable_objects:
            if obj not in self.player_inventory:
                self.player_inventory.append(obj)
                print(f"{BOLD}\n–í—ã –≤–∑—è–ª–∏ {obj.replace('_', ' ')}{RESET}")
            else:
                print(f"\n{obj.replace('_', ' ')} —É–∂–µ –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ")
        else:
            print("\n–≠—Ç–æ –Ω–µ–ª—å–∑—è –≤–∑—è—Ç—å.")
        
        return True

    def read_object(self, obj):
        if obj == "–Ω–∞–¥–ø–∏—Å—å":
            print(f"""
{BOLD}–ù–∞–¥–ø–∏—Å—å –Ω–∞–¥ –∑–µ—Ä–∫–∞–ª–æ–º –≥–ª–∞—Å–∏—Ç:
"–Ø - –æ—Ç—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≥–æ, —á—Ç–æ –±—ã–ª–æ –∏ –µ—Å—Ç—å, –Ω–æ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ —Å–º–æ–≥—É –±—ã—Ç—å —Ç–µ–º, —á—Ç–æ –±—É–¥–µ—Ç. 
–Ø —Ö—Ä–∞–Ω—é –ø—Ä–∞–≤–¥—É –≤ –∏—Å–∫–∞–∂–µ–Ω–Ω–æ–π —Ñ–æ—Ä–º–µ, –∏ –ª–∏—à—å —Ç–æ—Ç, –∫—Ç–æ —Å—É–º–µ–µ—Ç —Ä–∞–∑–≥–ª—è–¥–µ—Ç—å 
—Å–∫–≤–æ–∑—å –º–æ–∏ –∏–ª–ª—é–∑–∏–∏, –Ω–∞–π–¥–µ—Ç –ø—É—Ç—å –¥–∞–ª—å—à–µ. –ö–ª—é—á –∫ —Ä–∞–∑–≥–∞–¥–∫–µ –ª–µ–∂–∏—Ç 
–≤ –ø–µ—Ä–µ–ø–ª–µ—Ç–µ–Ω–∏–∏ –ø—Ä–æ—à–ª–æ–≥–æ –∏ –Ω–∞—Å—Ç–æ—è—â–µ–≥–æ..."

{ITALIC}–í—Å–ø–æ–º–Ω–∏–≤ —Å–ª–æ–≤–∞ –∏–∑ –∑–∞–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –∫–Ω–∏–≥–∏, –≤—ã –ø–æ–Ω–∏–º–∞–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ:
"–Ø –æ—Ç—Ä–∞–∂–∞—é –ò—Å—Ç–∏–Ω—É, –Ω–æ –∏—Å–∫–∞–∂–∞—é –õ–∏—Ü–∞. –ö—Ç–æ —è?"{RESET}
            """)
            return True
        else:
            print("\n–≠—Ç–æ –Ω–µ–ª—å–∑—è –ø—Ä–æ—á–∏—Ç–∞—Ç—å.")
            return True

    def use_object(self, obj):
        if obj == "–∑–æ–ª–æ—Ç–∞—è_—Ä–∞–º–∫–∞":
            if obj in self.player_inventory:
                print(f"\n{BOLD}–í—ã –ø–æ–¥–Ω–æ—Å–∏—Ç–µ –∑–æ–ª–æ—Ç—É—é —Ä–∞–º–∫—É –∫ –∑–µ—Ä–∫–∞–ª—É...{RESET}")
                time.sleep(2)
                print("–†–∞–º–∫–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç —Å–≤–µ—Ç–∏—Ç—å—Å—è, –∏ –≤ –∑–µ—Ä–∫–∞–ª–µ –ø—Ä–æ—è–≤–ª—è—é—Ç—Å—è —á–µ—Ç–∫–∏–µ –æ–±—Ä–∞–∑—ã.")
                print("–¢–µ–ø–µ—Ä—å –∑–∞–≥–∞–¥–∫–∞ —Å—Ç–∞–ª–∞ –ø–æ–Ω—è—Ç–Ω–µ–µ!")
                return True
            else:
                print("\n–°–Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ –≤–∑—è—Ç—å –∑–æ–ª–æ—Ç—É—é —Ä–∞–º–∫—É")
                return True
        else:
            print("\n–≠—Ç–æ –Ω–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∑–¥–µ—Å—å.")
            return True

    def answer_riddle(self, answer):
        print(f"\n–í—ã –æ—Ç–≤–µ—á–∞–µ—Ç–µ: '{answer}'...")
        time.sleep(2)
        
        if answer.lower() == self.riddle_answer:
            print(f"{BOLD}–ó–µ—Ä–∫–∞–ª–æ –Ω–∞—á–∏–Ω–∞–µ—Ç –º–µ—Ä—Ü–∞—Ç—å –∏ –º–µ–¥–ª–µ–Ω–Ω–æ –æ—Ç–æ–¥–≤–∏–≥–∞–µ—Ç—Å—è –≤ —Å—Ç–æ—Ä–æ–Ω—É!{RESET}")
            print("–ó–∞ –Ω–∏–º –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è –ø—Ä–æ—Ö–æ–¥ –≤ —Å–ª–µ–¥—É—é—â—É—é –∫–æ–º–Ω–∞—Ç—É...")
            self.riddle_solved = True
            return False
        else:
            print("–ù–∏—á–µ–≥–æ –Ω–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç. –ü–æ—Ö–æ–∂–µ, —ç—Ç–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç.")
            print("–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –ø–æ–∏—â–∏—Ç–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏ –≤ –∫–æ–º–Ω–∞—Ç–µ.")
            return True

    def show_help(self):
        print("\n=== –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã ===")
        print("–æ—Å–º–æ—Ç—Ä–µ—Ç—å [–æ–±—ä–µ–∫—Ç] - –æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ–±—ä–µ–∫—Ç")
        print("–≤–∑—è—Ç—å [–æ–±—ä–µ–∫—Ç] - –≤–∑—è—Ç—å –æ–±—ä–µ–∫—Ç –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å")
        print("–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å [–æ–±—ä–µ–∫—Ç] - –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–±—ä–µ–∫—Ç")
        print("—á–∏—Ç–∞—Ç—å [–æ–±—ä–µ–∫—Ç] - –ø—Ä–æ—á–∏—Ç–∞—Ç—å –æ–±—ä–µ–∫—Ç")
        print("–æ—Ç–≤–µ—Ç–∏—Ç—å [–æ—Ç–≤–µ—Ç] - –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –∑–∞–≥–∞–¥–∫—É")
        print("–∏–Ω–≤–µ–Ω—Ç–∞—Ä—å - –ø–æ–∫–∞–∑–∞—Ç—å –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å")
        print("–≤—ã—Ö–æ–¥ - –≤—ã–π—Ç–∏ –∏–∑ –∏–≥—Ä—ã")
        print("\n=== –û–±—ä–µ–∫—Ç—ã –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è ===")
        print("–∫–æ–º–Ω–∞—Ç–∞, –∑–µ—Ä–∫–∞–ª–æ, –Ω–∞–¥–ø–∏—Å—å, —Å—Ç–æ–ª–∏–∫, –∑–æ–ª–æ—Ç–∞—è_—Ä–∞–º–∫–∞")
        print("–∫–ª–µ—Ç–∫–∞_—Å_—â–µ–≥–ª–æ–º, –∫–ª—É–±–æ–∫_–Ω–∏—Ç–æ–∫, –≥–ª–∏–Ω—è–Ω–∞—è_–º–∞—Å–∫–∞, –ø–æ—Å—Ç–∞–º–µ–Ω—Ç—ã")

    def start_level(self):
        print("\n" + "="*60)
        print(f"{BOLD}–£–†–û–í–ï–ù–¨ 3: –ó–∞–≥–∞–¥–æ—á–Ω–∞—è –∫–æ–º–Ω–∞—Ç–∞ —Å –∑–µ—Ä–∫–∞–ª–æ–º{RESET}")
        print("="*60)
        
        print(f"""{ITALIC}
–≠–ª–ª–∏ –ø—Ä–æ—Ö–æ–¥–∏—Ç —á–µ—Ä–µ–∑ –æ—Ç–∫—Ä—ã–≤—à—É—é—Å—è –¥–≤–µ—Ä—å –∏ –ø–æ–ø–∞–¥–∞–µ—Ç –≤ –∫—Ä—É–≥–ª—É—é –∫–æ–º–Ω–∞—Ç—É –±–µ–∑ –æ–∫–æ–Ω.
–í–æ–∑–¥—É—Ö –∑–¥–µ—Å—å –Ω–µ–ø–æ–¥–≤–∏–∂–µ–Ω –∏ –ø—Ä–æ—Ö–ª–∞–¥–µ–Ω. –ï–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ —Å–≤–µ—Ç–∞ - –ø—Ä–∏–∑—Ä–∞—á–Ω–æ–µ 
—Å–≤–µ—á–µ–Ω–∏–µ –æ–≥—Ä–æ–º–Ω–æ–≥–æ –∑–µ—Ä–∫–∞–ª–∞, –∑–∞–Ω–∏–º–∞—é—â–µ–≥–æ –≤—Å—é —Å—Ç–µ–Ω—É. –í –æ—Ç—Ä–∞–∂–µ–Ω–∏–∏ –º–µ–ª—å–∫–∞—é—Ç 
—Ä–∞–∑–º—ã—Ç—ã–µ –æ–±—Ä–∞–∑—ã, —Å–ª–æ–≤–Ω–æ –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏—è, –ø—ã—Ç–∞—é—â–∏–µ—Å—è –ø—Ä–æ–±–∏—Ç—å—Å—è —Å–∫–≤–æ–∑—å –ø–µ–ª–µ–Ω—É –≤—Ä–µ–º–µ–Ω–∏.

–í–¥–æ–ª—å —Å—Ç–µ–Ω —Å—Ç–æ—è—Ç —Ç—Ä–∏ –ø–æ—Å—Ç–∞–º–µ–Ω—Ç–∞ —Å —Ç–∞–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏, –∞ –ø–æ–¥ –∑–µ—Ä–∫–∞–ª–æ–º 
–≤–∏–¥–Ω–µ–µ—Ç—Å—è –Ω–µ–±–æ–ª—å—à–æ–π —Å—Ç–æ–ª–∏–∫ —Å –∑–æ–ª–æ—Ç–æ–π —Ä–∞–º–∫–æ–π.
        {RESET}""")
        
        print("\n–í–≤–µ–¥–∏—Ç–µ '–ø–æ–º–æ—â—å' –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥")
        
        while True:
            print("\n" + "-"*40)
            command = input("\n–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å? ")
            
            if not self.process_command(command):
                break
            
            if self.riddle_solved:
                print(f"\n{BOLD}üéâ –í–´ –£–°–ü–ï–®–ù–û –ü–†–û–®–õ–ò 3 –£–†–û–í–ï–ù–¨! üéâ{RESET}")
                print("–ó–∞–≥–∞–¥–∫–∞ —Ä–∞–∑–≥–∞–¥–∞–Ω–∞! –ü—É—Ç—å –∫ –ª–æ–≥–æ–≤—É –∫—Ä—ã–ª–∞—Ç–æ–π –æ–±–µ–∑—å—è–Ω—ã –æ—Ç–∫—Ä—ã—Ç...")
                time.sleep(3)
                break
        
        return self.player_inventory

class Level4:
    def __init__(self, previous_inventory=None):
        self.player_inventory = previous_inventory if previous_inventory else []
        self.available_actions = ["–æ—Å–º–æ—Ç—Ä–µ—Ç—å", "–≤–∑—è—Ç—å", "–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å", "–∞—Ç–∞–∫–æ–≤–∞—Ç—å", "—É–±–µ–∂–∞—Ç—å", "–∏–Ω–≤–µ–Ω—Ç–∞—Ä—å"]
        self.interacted_objects = set()
        
        self.objects_description = {
            "–ª–æ–≥–æ–≤–æ": "–ü—Ä–æ—Å—Ç–æ—Ä–Ω–∞—è –ø–µ—â–µ—Ä–∞ —Å –≤—ã—Å–æ–∫–∏–º —Å–≤–æ–¥–æ–º, –æ—Ç–∫—É–¥–∞ —Å–≤–∏—Å–∞—é—Ç –ª–∏–∞–Ω—ã –∏ –∫–æ—Ä–Ω–∏ –¥–µ—Ä–µ–≤—å–µ–≤",
            "–æ–±–µ–∑—å—è–Ω–∞": "–ú–æ—â–Ω–∞—è –∫—Ä—ã–ª–∞—Ç–∞—è –æ–±–µ–∑—å—è–Ω–∞ —Å –≥–æ—Ä—è—â–∏–º–∏ –∫—Ä–∞—Å–Ω—ã–º–∏ –≥–ª–∞–∑–∞–º–∏ –∏ –æ–≥—Ä–æ–º–Ω—ã–º–∏ –∫—Ä—ã–ª—å—è–º–∏",
            "–≤—ã—Ö–æ–¥": "–°–≤–µ—Ç—è—â–∏–π—Å—è –ø–æ—Ä—Ç–∞–ª –≤ –¥–∞–ª—å–Ω–µ–º –∫–æ–Ω—Ü–µ –ª–æ–≥–æ–≤–∞ - –ø—É—Ç—å –∫ —Å–≤–æ–±–æ–¥–µ",
            "–∫–æ—Å—Ç–∏": "–†–∞–∑–±—Ä–æ—Å–∞–Ω–Ω—ã–µ –ø–æ –ø–æ–ª—É –∫–æ—Å—Ç–∏ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –∂–µ—Ä—Ç–≤ –æ–±–µ–∑—å—è–Ω—ã",
            "–≥–Ω–µ–∑–¥–æ": "–ë–æ–ª—å—à–æ–µ –≥–Ω–µ–∑–¥–æ –∏–∑ –≤–µ—Ç–æ–∫ –∏ –ø–µ—Ä—å–µ–≤ –≤ —Ü–µ–Ω—Ç—Ä–µ –ª–æ–≥–æ–≤–∞",
            "—Å–æ–∫—Ä–æ–≤–∏—â–∞": "–ë–ª–µ—Å—Ç—è—â–∏–µ –±–µ–∑–¥–µ–ª—É—à–∫–∏ –∏ –¥—Ä–∞–≥–æ—Ü–µ–Ω–Ω–æ—Å—Ç–∏, —Å–æ–±—Ä–∞–Ω–Ω—ã–µ –æ–±–µ–∑—å—è–Ω–æ–π"
        }
        
        self.monkey_stats = {
            "–∑–¥–æ—Ä–æ–≤—å–µ": 100,
            "–∞—Ç–∞–∫–∞": 30,
            "–∑–∞—â–∏—Ç–∞": 20,
            "—Å–æ—Å—Ç–æ—è–Ω–∏–µ": "–±–æ–¥—Ä—Å—Ç–≤—É–µ—Ç"
        }
        
        self.player_stats = {
            "–∑–¥–æ—Ä–æ–≤—å–µ": 100,
            "–∞—Ç–∞–∫–∞": 15,
            "–∑–∞—â–∏—Ç–∞": 10
        }
        
        self.level_completed = False

    def show_inventory(self):
        if not self.player_inventory:
            print("\n–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å –ø—É—Å—Ç.")
        else:
            print(f"\n–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å: {', '.join(self.player_inventory)}")

    def show_stats(self):
        print(f"\n{ITALIC}=== –í–ê–®–ò –•–ê–†–ê–ö–¢–ï–†–ò–°–¢–ò–ö–ò ===")
        print(f"–ó–¥–æ—Ä–æ–≤—å–µ: {self.player_stats['–∑–¥–æ—Ä–æ–≤—å–µ']}%")
        print(f"–ê—Ç–∞–∫–∞: {self.player_stats['–∞—Ç–∞–∫–∞']}")
        print(f"–ó–∞—â–∏—Ç–∞: {self.player_stats['–∑–∞—â–∏—Ç–∞']}{RESET}")
        
        print(f"\n{ITALIC}=== –•–ê–†–ê–ö–¢–ï–†–ò–°–¢–ò–ö–ò –û–ë–ï–ó–¨–Ø–ù–´ ===")
        print(f"–ó–¥–æ—Ä–æ–≤—å–µ: {self.monkey_stats['–∑–¥–æ—Ä–æ–≤—å–µ']}%")
        print(f"–ê—Ç–∞–∫–∞: {self.monkey_stats['–∞—Ç–∞–∫–∞']}")
        print(f"–ó–∞—â–∏—Ç–∞: {self.monkey_stats['–∑–∞—â–∏—Ç–∞']}")
        print(f"–°–æ—Å—Ç–æ—è–Ω–∏–µ: {self.monkey_stats['—Å–æ—Å—Ç–æ—è–Ω–∏–µ']}{RESET}")

    def process_command(self, command):
        command = command.lower().strip()
        
        if command == "–∏–Ω–≤–µ–Ω—Ç–∞—Ä—å":
            self.show_inventory()
            return True
        elif command == "—Å—Ç–∞—Ç—É—Å":
            self.show_stats()
            return True
        elif command == "–ø–æ–º–æ—â—å":
            self.show_help()
            return True
        elif command == "–≤—ã—Ö–æ–¥":
            return False
        
        parts = command.split()
        if len(parts) < 2:
            print("–ù–µ –ø–æ–Ω—è–ª –∫–æ–º–∞–Ω–¥—É. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: –¥–µ–π—Å—Ç–≤–∏–µ –æ–±—ä–µ–∫—Ç")
            return True
        
        action = parts[0]
        obj = "_".join(parts[1:])
        
        if action not in self.available_actions:
            print(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ. –î–æ—Å—Ç—É–ø–Ω—ã–µ: {', '.join(self.available_actions)}")
            return True
        
        return self.execute_action(action, obj)

    def execute_action(self, action, obj):
        if action == "–æ—Å–º–æ—Ç—Ä–µ—Ç—å":
            return self.examine_object(obj)
        elif action == "–≤–∑—è—Ç—å":
            return self.take_object(obj)
        elif action == "–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å":
            return self.use_object(obj)
        elif action == "–∞—Ç–∞–∫–æ–≤–∞—Ç—å":
            return self.attack_monkey(obj)
        elif action == "—É–±–µ–∂–∞—Ç—å":
            return self.escape()
        return True

    def examine_object(self, obj):
        if obj in self.objects_description:
            print(f"\n{self.objects_description[obj]}")
            self.interacted_objects.add(obj)
            
            if obj == "–æ–±–µ–∑—å—è–Ω–∞":
                print("–ö—Ä—ã–ª–∞—Ç–∞—è –æ–±–µ–∑—å—è–Ω–∞ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ —Å–ª–µ–¥–∏—Ç –∑–∞ –≤–∞—à–∏–º–∏ –¥–≤–∏–∂–µ–Ω–∏—è–º–∏.")
                if "–∫–æ—Å—Ç–∏" in self.interacted_objects:
                    print("–û–Ω–∞ –≤—ã–≥–ª—è–¥–∏—Ç –≥–æ–ª–æ–¥–Ω–æ–π –∏ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–π.")
            elif obj == "–≤—ã—Ö–æ–¥":
                print("–ü–æ—Ä—Ç–∞–ª –º–µ—Ä—Ü–∞–µ—Ç –ø—Ä–∏–∑—ã–≤–Ω–æ, –Ω–æ –æ–±–µ–∑—å—è–Ω–∞ –ø—Ä–µ–≥—Ä–∞–∂–¥–∞–µ—Ç –ø—É—Ç—å.")
            
            return True
        else:
            print("\n–ù–µ –≤–∏–∂—É —Ç–∞–∫–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ –¥–ª—è –æ—Å–º–æ—Ç—Ä–∞.")
            return True

    def take_object(self, obj):
        if obj == "—Å–æ–∫—Ä–æ–≤–∏—â–∞":
            print("\n–û–±–µ–∑—å—è–Ω–∞ —Ä—ã—á–∏—Ç, –∫–æ–≥–¥–∞ –≤—ã –ø—ã—Ç–∞–µ—Ç–µ—Å—å –≤–∑—è—Ç—å –µ–µ —Å–æ–∫—Ä–æ–≤–∏—â–∞!")
            print("–õ—É—á—à–µ –Ω–µ –∑–ª–∏—Ç—å –µ–µ –±–µ–∑ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏.")
            return True
        else:
            print("\n–≠—Ç–æ –Ω–µ–ª—å–∑—è –≤–∑—è—Ç—å.")
            return True

    def use_object(self, obj):
        if obj in self.player_inventory:
            if obj == "–∫–ª–µ—Ç–∫–∞_—Å_—â–µ–≥–ª–æ–º":
                return self.use_birdcage()
            elif obj == "–∫–ª—É–±–æ–∫_–Ω–∏—Ç–æ–∫":
                return self.use_thread_ball()
            elif obj == "–≥–ª–∏–Ω—è–Ω–∞—è_–º–∞—Å–∫–∞":
                return self.use_clay_mask()
            elif obj == "–∑–æ–ª–æ—Ç–∞—è_—Ä–∞–º–∫–∞":
                print("\n–í—ã –ø—ã—Ç–∞–µ—Ç–µ—Å—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∑–æ–ª–æ—Ç—É—é —Ä–∞–º–∫—É, –Ω–æ –æ–Ω–∞ –Ω–µ –æ–∫–∞–∑—ã–≤–∞–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç–∞ –Ω–∞ –æ–±–µ–∑—å—è–Ω—É.")
                return True
            else:
                print(f"\n{obj.replace('_', ' ')} –Ω–µ –æ–∫–∞–∑—ã–≤–∞–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç–∞ –∑–¥–µ—Å—å.")
                return True
        else:
            print(f"\n–°–Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ –≤–∑—è—Ç—å {obj.replace('_', ' ')}")
            return True

    def use_birdcage(self):
        print(f"\n{BOLD}–í—ã –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç–µ –∫–ª–µ—Ç–∫—É –∏ –≤—ã–ø—É—Å–∫–∞–µ—Ç–µ —â–µ–≥–ª–∞!{RESET}")
        time.sleep(2)
        print("–©–µ–≥–æ–ª –≤—ã–ª–µ—Ç–∞–µ—Ç –∏ –Ω–∞—á–∏–Ω–∞–µ—Ç –ø–æ—Ä—Ö–∞—Ç—å –ø–µ—Ä–µ–¥ –æ–±–µ–∑—å—è–Ω–æ–π.")
        print("–û–±–µ–∑—å—è–Ω–∞ –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω–æ —Å–ª–µ–¥–∏—Ç –∑–∞ –ø—Ç–∏—Ü–µ–π, –æ—Ç–≤–ª–µ–∫–∞—è—Å—å –æ—Ç –≤–∞—Å.")
        
        self.monkey_stats["—Å–æ—Å—Ç–æ—è–Ω–∏–µ"] = "–æ—Ç–≤–ª–µ—á–µ–Ω–∞"
        self.player_inventory.remove("–∫–ª–µ—Ç–∫–∞_—Å_—â–µ–≥–ª–æ–º")
        
        print("–¢–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å —à–∞–Ω—Å –∞—Ç–∞–∫–æ–≤–∞—Ç—å –∏–ª–∏ –ø–æ–ø—ã—Ç–∞—Ç—å—Å—è —É–±–µ–∂–∞—Ç—å!")
        return True

    def use_thread_ball(self):
        print(f"\n{BOLD}–í—ã —Ä–∞–∑–º–∞—Ç—ã–≤–∞–µ—Ç–µ –∫–ª—É–±–æ–∫ –∑–æ–ª–æ—Ç—ã—Ö –Ω–∏—Ç–æ–∫!{RESET}")
        time.sleep(2)
        print("–í–æ–ª—à–µ–±–Ω—ã–µ –Ω–∏—Ç–∏ –æ–ø—É—Ç—ã–≤–∞—é—Ç –ª–∞–ø—ã –æ–±–µ–∑—å—è–Ω—ã, —Å–∫–æ–≤—ã–≤–∞—è –µ–µ –¥–≤–∏–∂–µ–Ω–∏—è.")
        
        self.monkey_stats["–∑–∞—â–∏—Ç–∞"] = max(5, self.monkey_stats["–∑–∞—â–∏—Ç–∞"] - 10)
        self.monkey_stats["–∞—Ç–∞–∫–∞"] = max(15, self.monkey_stats["–∞—Ç–∞–∫–∞"] - 10)
        self.monkey_stats["—Å–æ—Å—Ç–æ—è–Ω–∏–µ"] = "–æ–ø—É—Ç–∞–Ω–∞"
        self.player_inventory.remove("–∫–ª—É–±–æ–∫_–Ω–∏—Ç–æ–∫")
        
        print("–û–±–µ–∑—å—è–Ω–∞ —Å—Ç–∞–ª–∞ –º–µ–¥–ª–µ–Ω–Ω–µ–µ –∏ —É—è–∑–≤–∏–º–µ–µ!")
        return True

    def use_clay_mask(self):
        print(f"\n{BOLD}–í—ã –Ω–∞–¥–µ–≤–∞–µ—Ç–µ –≥–ª–∏–Ω—è–Ω—É—é –º–∞—Å–∫—É –º—É–¥—Ä–µ—Ü–∞!{RESET}")
        time.sleep(2)
        print("–ú–∞—Å–∫–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç —Å–≤–µ—Ç–∏—Ç—å—Å—è, –∏ –≤–∞—à –≥–æ–ª–æ—Å —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –≥–ª—É–±–æ–∫–∏–º –∏ –≤–ª–∞—Å—Ç–Ω—ã–º.")
        print("–í—ã –ø—Ä–∏–∫–∞–∑—ã–≤–∞–µ—Ç–µ –æ–±–µ–∑—å—è–Ω–µ: '–£–ô–î–ò –û–¢–°–Æ–î–ê –ò –ù–ï –ú–ï–®–ê–ô –ú–ù–ï!'")
        time.sleep(2)
        
        if random.random() > 0.3:  
            print("–û–±–µ–∑—å—è–Ω–∞ –≤ —É–∂–∞—Å–µ –æ—Ç—Å—Ç—É–ø–∞–µ—Ç –∏ —É–ª–µ—Ç–∞–µ—Ç –≤–≥–ª—É–±—å –ø–µ—â–µ—Ä—ã!")
            self.monkey_stats["—Å–æ—Å—Ç–æ—è–Ω–∏–µ"] = "–Ω–∞–ø—É–≥–∞–Ω–∞"
            self.monkey_stats["–∑–¥–æ—Ä–æ–≤—å–µ"] = 0
            self.level_completed = True
            self.player_inventory.remove("–≥–ª–∏–Ω—è–Ω–∞—è_–º–∞—Å–∫–∞")
            return False
        else:
            print("–û–±–µ–∑—å—è–Ω–∞ –ª–∏—à—å —Ä–∞–∑–æ–∑–ª–∏–ª–∞—Å—å –µ—â–µ –±–æ–ª—å—à–µ!")
            self.monkey_stats["–∞—Ç–∞–∫–∞"] += 10
            self.player_inventory.remove("–≥–ª–∏–Ω—è–Ω–∞—è_–º–∞—Å–∫–∞")
            return True

    def attack_monkey(self, weapon):
        print(f"\n{BOLD}–í—ã –∞—Ç–∞–∫—É–µ—Ç–µ –∫—Ä—ã–ª–∞—Ç—É—é –æ–±–µ–∑—å—è–Ω—É!{RESET}")
        time.sleep(2)
        
 
        player_damage = max(5, self.player_stats["–∞—Ç–∞–∫–∞"] - self.monkey_stats["–∑–∞—â–∏—Ç–∞"] // 2)
        monkey_damage = max(10, self.monkey_stats["–∞—Ç–∞–∫–∞"] - self.player_stats["–∑–∞—â–∏—Ç–∞"] // 2)
        
 
 
        self.monkey_stats["–∑–¥–æ—Ä–æ–≤—å–µ"] -= player_damage
        print(f"–í—ã –Ω–∞–Ω–æ—Å–∏—Ç–µ –æ–±–µ–∑—å—è–Ω–µ {player_damage} —É—Ä–æ–Ω–∞!")
        
        if self.monkey_stats["–∑–¥–æ—Ä–æ–≤—å–µ"] <= 0:
            print("–ö—Ä—ã–ª–∞—Ç–∞—è –æ–±–µ–∑—å—è–Ω–∞ –ø–æ–≤–µ—Ä–∂–µ–Ω–∞!")
            self.level_completed = True
            return False
        
        print("–û–±–µ–∑—å—è–Ω–∞ –∫–æ–Ω—Ç—Ä–∞—Ç–∞–∫—É–µ—Ç!")
        time.sleep(1)
        self.player_stats["–∑–¥–æ—Ä–æ–≤—å–µ"] -= monkey_damage
        print(f"–û–±–µ–∑—å—è–Ω–∞ –Ω–∞–Ω–æ—Å–∏—Ç –≤–∞–º {monkey_damage} —É—Ä–æ–Ω–∞!")
        
        if self.player_stats["–∑–¥–æ—Ä–æ–≤—å–µ"] <= 0:
            print("–í—ã –ø–æ–≤–µ—Ä–∂–µ–Ω—ã! –ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞.")
            return False
        
        self.show_stats()
        return True

    def escape(self):
        print(f"\n{BOLD}–í—ã –ø—ã—Ç–∞–µ—Ç–µ—Å—å —É–±–µ–∂–∞—Ç—å –æ—Ç –æ–±–µ–∑—å—è–Ω—ã!{RESET}")
        time.sleep(2)
        
        escape_chance = 0.4 
        
        if self.monkey_stats["—Å–æ—Å—Ç–æ—è–Ω–∏–µ"] in ["–æ—Ç–≤–ª–µ—á–µ–Ω–∞", "–æ–ø—É—Ç–∞–Ω–∞"]:
            escape_chance += 0.3
            print("–û–±–µ–∑—å—è–Ω–∞ –æ—Ç–≤–ª–µ—á–µ–Ω–∞ - —É –≤–∞—Å –±–æ–ª—å—à–µ —à–∞–Ω—Å–æ–≤ –Ω–∞ —É—Å–ø–µ—Ö!")
        
        if random.random() < escape_chance:
            print("–í–∞–º —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—Å–∫–æ—á–∏—Ç—å –º–∏–º–æ –æ–±–µ–∑—å—è–Ω—ã –∫ —Å–≤–µ—Ç—è—â–µ–º—É—Å—è –ø–æ—Ä—Ç–∞–ª—É!")
            self.level_completed = True
            return False
        else:
            print("–û–±–µ–∑—å—è–Ω–∞ –ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç –≤–∞—Å –∏ –∞—Ç–∞–∫—É–µ—Ç!")
            damage = max(15, self.monkey_stats["–∞—Ç–∞–∫–∞"] - self.player_stats["–∑–∞—â–∏—Ç–∞"] // 3)
            self.player_stats["–∑–¥–æ—Ä–æ–≤—å–µ"] -= damage
            print(f"–û–±–µ–∑—å—è–Ω–∞ –Ω–∞–Ω–æ—Å–∏—Ç –≤–∞–º {damage} —É—Ä–æ–Ω–∞!")
            
            if self.player_stats["–∑–¥–æ—Ä–æ–≤—å–µ"] <= 0:
                print("–í—ã –ø–æ–≤–µ—Ä–∂–µ–Ω—ã! –ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞.")
                return False
            
            self.show_stats()
            return True

    def show_help(self):
        print("\n=== –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã ===")
        print("–æ—Å–º–æ—Ç—Ä–µ—Ç—å [–æ–±—ä–µ–∫—Ç] - –æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ–±—ä–µ–∫—Ç")
        print("–≤–∑—è—Ç—å [–æ–±—ä–µ–∫—Ç] - –≤–∑—è—Ç—å –æ–±—ä–µ–∫—Ç –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å")
        print("–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å [–æ–±—ä–µ–∫—Ç] - –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–±—ä–µ–∫—Ç –∏–∑ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è")
        print("–∞—Ç–∞–∫–æ–≤–∞—Ç—å [–æ–±–µ–∑—å—è–Ω—É] - –∞—Ç–∞–∫–æ–≤–∞—Ç—å –∫—Ä—ã–ª–∞—Ç—É—é –æ–±–µ–∑—å—è–Ω—É")
        print("—É–±–µ–∂–∞—Ç—å - –ø–æ–ø—ã—Ç–∞—Ç—å—Å—è —É–±–µ–∂–∞—Ç—å –∫ –≤—ã—Ö–æ–¥—É")
        print("–∏–Ω–≤–µ–Ω—Ç–∞—Ä—å - –ø–æ–∫–∞–∑–∞—Ç—å –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å")
        print("—Å—Ç–∞—Ç—É—Å - –ø–æ–∫–∞–∑–∞—Ç—å —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏")
        print("–≤—ã—Ö–æ–¥ - –≤—ã–π—Ç–∏ –∏–∑ –∏–≥—Ä—ã")
        print("\n=== –û–±—ä–µ–∫—Ç—ã –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è ===")
        print("–ª–æ–≥–æ–≤–æ, –æ–±–µ–∑—å—è–Ω–∞, –≤—ã—Ö–æ–¥, –∫–æ—Å—Ç–∏, –≥–Ω–µ–∑–¥–æ, —Å–æ–∫—Ä–æ–≤–∏—â–∞")

    def start_level(self):
        print("\n" + "="*60)
        print(f"{BOLD}–£–†–û–í–ï–ù–¨ 4: –õ–æ–≥–æ–≤–æ –∫—Ä—ã–ª–∞—Ç–æ–π –æ–±–µ–∑—å—è–Ω—ã{RESET}")
        print("="*60)
        
        print(f"""{ITALIC}
–≠–ª–ª–∏ –≤—Ö–æ–¥–∏—Ç –≤ –ø—Ä–æ—Å—Ç–æ—Ä–Ω—É—é –ø–µ—â–µ—Ä—É —Å –≤—ã—Å–æ–∫–∏–º —Å–≤–æ–¥–æ–º. –í–æ–∑–¥—É—Ö —Ç—è–∂–µ–ª –∏ –≤–ª–∞–∂–µ–Ω.
–í —Ü–µ–Ω—Ç—Ä–µ –ª–æ–≥–æ–≤–∞, –Ω–∞ –≥—Ä—É–¥–µ –∫–æ—Å—Ç–µ–π –∏ –ø–µ—Ä—å–µ–≤, –≤–æ—Å—Å–µ–¥–∞–µ—Ç –æ–≥—Ä–æ–º–Ω–∞—è –∫—Ä—ã–ª–∞—Ç–∞—è –æ–±–µ–∑—å—è–Ω–∞.
–ï–µ –∫—Ä–∞—Å–Ω—ã–µ –≥–ª–∞–∑–∞ –≥–æ—Ä—è—Ç —è—Ä–æ—Å—Ç—å—é, –∞ –º–æ—â–Ω—ã–µ –∫—Ä—ã–ª—å—è —Ä–∞—Å–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ —É–≥—Ä–æ–∂–∞—é—â–µ–π –ø–æ–∑–µ.

–í –¥–∞–ª—å–Ω–µ–º –∫–æ–Ω—Ü–µ –ø–µ—â–µ—Ä—ã –º–µ—Ä—Ü–∞–µ—Ç —Å–≤–µ—Ç—è—â–∏–π—Å—è –ø–æ—Ä—Ç–∞–ª - –ø—É—Ç—å –∫ —Å–≤–æ–±–æ–¥–µ.
–ù–æ —á—Ç–æ–±—ã –¥–æ—Å—Ç–∏—á—å –µ–≥–æ, –Ω—É–∂–Ω–æ –ø—Ä–µ–æ–¥–æ–ª–µ—Ç—å —Å–≤–∏—Ä–µ–ø–æ–≥–æ —Å—Ç—Ä–∞–∂–∞...
        {RESET}""")
        
        self.show_stats()
        print("\n–í–≤–µ–¥–∏—Ç–µ '–ø–æ–º–æ—â—å' –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥")
        
        while True:
            print("\n" + "-"*40)
            command = input("\n–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å? ")
            
            if not self.process_command(command):
                break
            
            if self.level_completed:
                print(f"\n{BOLD}üéâ –í–´ –£–°–ü–ï–®–ù–û –ü–†–û–®–õ–ò 4 –£–†–û–í–ï–ù–¨! üéâ{RESET}")
                print("–ö—Ä—ã–ª–∞—Ç–∞—è –æ–±–µ–∑—å—è–Ω–∞ –ø–æ–±–µ–∂–¥–µ–Ω–∞! –ü—É—Ç—å –∫ —Å–≤–æ–±–æ–¥–µ –æ—Ç–∫—Ä—ã—Ç...")
                time.sleep(3)
                break
            elif self.player_stats["–∑–¥–æ—Ä–æ–≤—å–µ"] <= 0:
                print("\n–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞! –≠–ª–ª–∏ –Ω–µ —Å–º–æ–≥–ª–∞ –ø—Ä–µ–æ–¥–æ–ª–µ—Ç—å –ø–æ—Å–ª–µ–¥–Ω–µ–µ –∏—Å–ø—ã—Ç–∞–Ω–∏–µ.")
                break
        
        return self.level_completed


def main():
    print(f"{BOLD}=== –í–û–õ–®–ï–ë–ù–ò–ö –ò–ó–£–ú–†–£–î–ù–û–ì–û –ì–û–†–û–î–ê ==={RESET}")
    print("–ü—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ –≠–ª–ª–∏ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è...")
    time.sleep(2)
    
    level1 = Level1()
    inventory = level1.start_level()
    
    if inventory is not None:
        print("\n–ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —É—Ä–æ–≤–Ω—é...")
        time.sleep(2)
        
        level2 = Level2(previous_inventory=inventory)
        inventory = level2.start_level()
    
    if inventory is not None:
        print("\n–ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —É—Ä–æ–≤–Ω—é...")
        time.sleep(2)
        
        level3 = Level3(previous_inventory=inventory)
        inventory = level3.start_level()
    
    if inventory is not None:
        print("\n–ü–µ—Ä–µ—Ö–æ–¥ –∫ —Ñ–∏–Ω–∞–ª—å–Ω–æ–º—É —É—Ä–æ–≤–Ω—é...")
        time.sleep(2)
        
        level4 = Level4(previous_inventory=inventory)
        game_completed = level4.start_level()
        
        if game_completed:
            print(f"""
{BOLD}=== –ü–û–ë–ï–î–ê! ==={RESET}

{ITALIC}
–≠–ª–ª–∏ –ø—Ä–æ—Ö–æ–¥–∏—Ç —á–µ—Ä–µ–∑ —Å–≤–µ—Ç—è—â–∏–π—Å—è –ø–æ—Ä—Ç–∞–ª –∏ –æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –Ω–∞ —Å–æ–ª–Ω–µ—á–Ω–æ–π –ø–æ–ª—è–Ω–µ 
–∑–∞ –ø—Ä–µ–¥–µ–ª–∞–º–∏ –º—Ä–∞—á–Ω–æ–≥–æ –∑–∞–º–∫–∞. –í–æ–∑–¥—É—Ö —Å–≤–µ–∂ –∏ –Ω–∞–ø–æ–ª–Ω–µ–Ω –∞—Ä–æ–º–∞—Ç–∞–º–∏ –ø–æ–ª–µ–≤—ã—Ö —Ü–≤–µ—Ç–æ–≤.

–í–¥–∞–ª–∏ –≤–∏–¥–Ω–µ—é—Ç—Å—è –∏–∑—É–º—Ä—É–¥–Ω—ã–µ –±–∞—à–Ω–∏ —Ä–æ–¥–Ω–æ–≥–æ –≥–æ—Ä–æ–¥–∞. –ü—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ –ø–æ–¥–æ—à–ª–æ –∫ –∫–æ–Ω—Ü—É, 
–Ω–æ –≤–ø–µ—Ä–µ–¥–∏ –µ–µ –∂–¥–µ—Ç –¥–æ–ª–≥–∞—è –∏ —Å—á–∞—Å—Ç–ª–∏–≤–∞—è –∂–∏–∑–Ω—å, –ø–æ–ª–Ω–∞—è –Ω–æ–≤—ã—Ö –æ—Ç–∫—Ä—ã—Ç–∏–π.

–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –ø–æ–º–æ–≥–ª–∏ –≠–ª–ª–∏ –ø—Ä–æ–π—Ç–∏ —ç—Ç–æ—Ç —Ç—Ä—É–¥–Ω—ã–π –ø—É—Ç—å!
{RESET}
            """)
        else:
            print(f"""
{ITALIC}
–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≠–ª–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–µ–æ–¥–æ–ª–µ—Ç—å –≤—Å–µ –∏—Å–ø—ã—Ç–∞–Ω–∏—è...
–ù–æ –µ–µ –¥—É—Ö –æ—Å—Ç–∞–Ω–µ—Ç—Å—è –≤ —Å—Ç–µ–Ω–∞—Ö –∑–∞–º–∫–∞ –∫–∞–∫ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ —Å–º–µ–ª–æ—Å—Ç–∏ 
–∏ —É–ø–æ—Ä—Å—Ç–≤–µ –ø–µ—Ä–µ–¥ –ª–∏—Ü–æ–º –æ–ø–∞—Å–Ω–æ—Å—Ç–∏.
{RESET}
            """)

if __name__ == "__main__":
    main()
